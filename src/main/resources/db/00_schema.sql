DROP TABLE IF EXISTS ACCOUNT_ROLES;
CREATE TABLE ACCOUNT_ROLES
(
  ID bigint AUTO_INCREMENT PRIMARY KEY NOT NULL,
  ROLE varchar(15) NOT NULL
);
CREATE UNIQUE INDEX UK_IPRXL088Q1V5YSCCOUDOJ9X52_INDEX_D ON PUBLIC.ACCOUNT_ROLES (ROLE);

DROP TABLE IF EXISTS ACCOUNTS;
CREATE TABLE ACCOUNTS
(
  ID bigint AUTO_INCREMENT PRIMARY KEY NOT NULL,
  ACTIVE boolean NOT NULL,
  EMAIL varchar(100) NOT NULL,
  PASSWORD varchar(255) NOT NULL,
  USER_NAME varchar(25) NOT NULL
);
CREATE UNIQUE INDEX UK_JMM1A2TIS12T536DJPR3M60FB_INDEX_A ON PUBLIC.ACCOUNTS (USER_NAME);

DROP TABLE IF EXISTS Models;
CREATE TABLE Models (
  id BIGINT NOT NULL AUTO_INCREMENT ,
  name VARCHAR(50) NOT NULL ,
  adapter_type INTEGER(10) NOT NULL ,
  adapter_class VARCHAR(255) NOT NULL ,
  language VARCHAR(3) NOT NULL ,
  location VARCHAR(255) NOT NULL ,
  trainable BOOLEAN ,
  owner BIGINT NOT NULL,
  open BOOLEAN ,
  description TEXT ,
  PRIMARY KEY (id),
  UNIQUE (name),
  CONSTRAINT MODELS_FK_ACCOUNTS FOREIGN KEY (OWNER) REFERENCES ACCOUNTS (ID)
);

DROP TABLE IF EXISTS ACCOUNTS_TO_ROLES;
CREATE TABLE ACCOUNTS_TO_ROLES
(
  ACCOUNT_ID bigint NOT NULL,
  ROLE_ID bigint NOT NULL,
  CONSTRAINT A2R_FK_ACCOUNTS FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS (ID),
  CONSTRAINT A2R_FK_ROLES FOREIGN KEY (ROLE_ID) REFERENCES ACCOUNT_ROLES (ID)
);

drop table if EXISTS PERSISTENT_LOGINS;
CREATE TABLE PERSISTENT_LOGINS (
  username VARCHAR(64) NOT NULL,
  series VARCHAR(64) NOT NULL,
  token VARCHAR(64) NOT NULL,
  last_used TIMESTAMP NOT NULL,
  PRIMARY KEY (series)
);

DROP TABLE IF EXISTS SEARCHES;
CREATE TABLE SEARCHES
(
  ID bigint AUTO_INCREMENT PRIMARY KEY NOT NULL,
  CLASSIFY_SUBJECTIVITY boolean,
  CLEAN_TWEET boolean,
  CREATED timestamp,
  DEL_STOPWORDS boolean,
  DISCARD_NON_SUBJECTIVE boolean,
  LANG varchar(255) NOT NULL,
  SENTIMENT_ADAPTER varchar(255) NOT NULL,
  SENTIMENT_MODEL varchar(255) NOT NULL,
  SOURCE varchar(50) NOT NULL,
  SOURCE_CLASS varchar(255) NOT NULL,
  SUBJECTIVITY_ADAPTER varchar(255),
  SUBJECTIVITY_MODEL varchar(255),
  TERM varchar(255) NOT NULL,
  TITLE varchar(255),
  UPDATED timestamp,
  OWNER bigint,
  CONSTRAINT FKRVNMMUK5EVNCOPASQ4KM1CQ88 FOREIGN KEY (OWNER) REFERENCES ACCOUNTS (ID)
);

DROP TABLE IF EXISTS COMMENTS;
CREATE TABLE COMMENTS
(
  ID bigint AUTO_INCREMENT PRIMARY KEY NOT NULL,
  COMMENT clob NOT NULL,
  DATE timestamp,
  SENTIMENT varchar(255),
  SENTIMENT_SCORE double,
  SOURCE_URL varchar(512),
  SUBJECTIVITY varchar(255),
  SUBJECTIVITY_SCORE double,
  TOKENIZED boolean,
  TOKENIZED_COMMENT clob,
  SEARCH_ID bigint,
  CONSTRAINT FKS0X8K2FDHU88T5UXAKQGJT9TJ FOREIGN KEY (SEARCH_ID) REFERENCES SEARCHES (ID)
);

